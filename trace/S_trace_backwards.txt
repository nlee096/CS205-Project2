Welcome to Nathan Lee's and Sahas Poyekar's Feature Selection Algorithm.
Select which data set:
1. Test small dataset 32
2. Test small dataset 33
3. Test large dataset 32
4. Test large dataset 33
5. CS170_small_Data__6.txt
6. CS170_large_Data__4.txt
7. CS170_XXXlarge_Data__10.txt
8. Type in your own
5
This dataset has 10 features (not including the class attribute), with 1000 instances.
Do you want to normalize? (0 = no, 1 = yes)
0
Type the number of the algorithm you want to run.
1 : Forward Selection
2 : Backward Elimination
2
Running nearest neighbor with all 10 features, using "Leave-one-out" evaluation, I get an accuracy of 77.1%
time : 0.019298 seconds
Beginning search

Using feature(s) {2, 3, 4, 5, 6, 7, 8, 9, 10} accuracy is 80.4%
Using feature(s) {1, 3, 4, 5, 6, 7, 8, 9, 10} accuracy is 79%
Using feature(s) {1, 2, 4, 5, 6, 7, 8, 9, 10} accuracy is 80.1%
Using feature(s) {1, 2, 3, 5, 6, 7, 8, 9, 10} accuracy is 76.6%
Using feature(s) {1, 2, 3, 4, 6, 7, 8, 9, 10} accuracy is 77.7%
Using feature(s) {1, 2, 3, 4, 5, 7, 8, 9, 10} accuracy is 78.3%
Using feature(s) {1, 2, 3, 4, 5, 6, 8, 9, 10} accuracy is 74%
Using feature(s) {1, 2, 3, 4, 5, 6, 7, 9, 10} accuracy is 76.9%
Using feature(s) {1, 2, 3, 4, 5, 6, 7, 8, 10} accuracy is 71.4%
Using feature(s) {1, 2, 3, 4, 5, 6, 7, 8, 9} accuracy is 79.3%
Feature set {2, 3, 4, 5, 6, 7, 8, 9, 10} was best, accuracy is 80.4%

Using feature(s) {3, 4, 5, 6, 7, 8, 9, 10} accuracy is 80.7%
Using feature(s) {2, 4, 5, 6, 7, 8, 9, 10} accuracy is 81.3%
Using feature(s) {2, 3, 5, 6, 7, 8, 9, 10} accuracy is 80.5%
Using feature(s) {2, 3, 4, 6, 7, 8, 9, 10} accuracy is 78.6%
Using feature(s) {2, 3, 4, 5, 7, 8, 9, 10} accuracy is 79.8%
Using feature(s) {2, 3, 4, 5, 6, 8, 9, 10} accuracy is 77%
Using feature(s) {2, 3, 4, 5, 6, 7, 9, 10} accuracy is 80.5%
Using feature(s) {2, 3, 4, 5, 6, 7, 8, 10} accuracy is 73.2%
Using feature(s) {2, 3, 4, 5, 6, 7, 8, 9} accuracy is 82.8%
Feature set {2, 3, 4, 5, 6, 7, 8, 9} was best, accuracy is 82.8%

Using feature(s) {3, 4, 5, 6, 7, 8, 9} accuracy is 83.1%
Using feature(s) {2, 4, 5, 6, 7, 8, 9} accuracy is 84.2%
Using feature(s) {2, 3, 5, 6, 7, 8, 9} accuracy is 83.4%
Using feature(s) {2, 3, 4, 6, 7, 8, 9} accuracy is 81.8%
Using feature(s) {2, 3, 4, 5, 7, 8, 9} accuracy is 83.8%
Using feature(s) {2, 3, 4, 5, 6, 8, 9} accuracy is 78.2%
Using feature(s) {2, 3, 4, 5, 6, 7, 9} accuracy is 82.1%
Using feature(s) {2, 3, 4, 5, 6, 7, 8} accuracy is 74.8%
Feature set {2, 4, 5, 6, 7, 8, 9} was best, accuracy is 84.2%

Using feature(s) {4, 5, 6, 7, 8, 9} accuracy is 85.2%
Using feature(s) {2, 5, 6, 7, 8, 9} accuracy is 86%
Using feature(s) {2, 4, 6, 7, 8, 9} accuracy is 86.4%
Using feature(s) {2, 4, 5, 7, 8, 9} accuracy is 85.4%
Using feature(s) {2, 4, 5, 6, 8, 9} accuracy is 79.2%
Using feature(s) {2, 4, 5, 6, 7, 9} accuracy is 83.9%
Using feature(s) {2, 4, 5, 6, 7, 8} accuracy is 73.3%
Feature set {2, 4, 6, 7, 8, 9} was best, accuracy is 86.4%

Using feature(s) {4, 6, 7, 8, 9} accuracy is 88.4%
Using feature(s) {2, 6, 7, 8, 9} accuracy is 87%
Using feature(s) {2, 4, 7, 8, 9} accuracy is 88.4%
Using feature(s) {2, 4, 6, 8, 9} accuracy is 80.4%
Using feature(s) {2, 4, 6, 7, 9} accuracy is 89.4%
Using feature(s) {2, 4, 6, 7, 8} accuracy is 73.9%
Feature set {2, 4, 6, 7, 9} was best, accuracy is 89.4%

Using feature(s) {4, 6, 7, 9} accuracy is 90.7%
Using feature(s) {2, 6, 7, 9} accuracy is 89.9%
Using feature(s) {2, 4, 7, 9} accuracy is 90.6%
Using feature(s) {2, 4, 6, 9} accuracy is 82%
Using feature(s) {2, 4, 6, 7} accuracy is 73%
Feature set {4, 6, 7, 9} was best, accuracy is 90.7%

Using feature(s) {6, 7, 9} accuracy is 93.2%
Using feature(s) {4, 7, 9} accuracy is 93.2%
Using feature(s) {4, 6, 9} accuracy is 82.3%
Using feature(s) {4, 6, 7} accuracy is 72.3%
Feature set {6, 7, 9} was best, accuracy is 93.2%

Using feature(s) {7, 9} accuracy is 95.7%
Using feature(s) {6, 9} accuracy is 83.5%
Using feature(s) {6, 7} accuracy is 74.5%
Feature set {7, 9} was best, accuracy is 95.7%

Using feature(s) {9} accuracy is 85.1%
Using feature(s) {7} accuracy is 74.3%
Feature set {9} was best, accuracy is 85.1%
(Warning, Accuracy has decreased from last set!)
(Warning, accuracy is lower than the best set!)

Using feature(s) {} accuracy is 81.5%
Feature set {} was best, accuracy is 81.5%
(Warning, Accuracy has decreased from last set!)
(Warning, accuracy is lower than the best set!)

Finished search!! The best feature subset is {7, 9}, which has an accuracy of 95.7%
total time : 0.455182 seconds
